---
- name: Setup PostgreSql container
  hosts: postgres
  become: true

  tasks:
    - name: Create docker volume if it is not found
      community.docker.docker_volume:
        name: posgres_data
        state: present

    - name: Create Postgres Container
      # enable (true) no_log to prevent POSTGRES_PASSWORD from being exposed when the -v option is used
      no_log: false
      community.docker.docker_container:
        name: postgres
        image: postgres:17.0-alpine3.19
        state: started
        recreate: true
        restart: true
        ports:
          - "5432:5432"
        volumes:
          - posgres_data:/var/lib/postgresql/data
        env:
          POSTGRES_USER: "{{ postgres_user }}"
          POSTGRES_PASSWORD: "{{ postgres_password }}"

    - name: Ensure pip is installed
      ansible.builtin.apt:
        name: python3-pip
        state: present
      when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

    - name: Install psycopg2-binary
      ansible.builtin.pip:
        name: psycopg2-binary

    - name: Update apt repository cache
      ansible.builtin.apt:
        update_cache: true

    - name: Install PostgreSQL Client
      ansible.builtin.apt:
        name: postgresql-client
        state: present
        force_apt_get: true
        install_recommends: false
        update_cache: true
